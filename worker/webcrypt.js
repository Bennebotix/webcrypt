const Webcrypt={encrypt:async(b,a)=>btoa(Array.from(new Uint8Array(await crypto.subtle.encrypt({name:"AES-CBC",iv:a[1]},a[0],(new TextEncoder).encode(b)))).map(c=>c+1).join(",")),decrypt:async(b,a)=>(new TextDecoder).decode(await crypto.subtle.decrypt({name:"AES-CBC",iv:a[1]},a[0],new Uint8Array(atob(b).split(",").map(c=>c-1)))),genRandKey:async()=>[await crypto.subtle.generateKey({name:"AES-CBC",length:256},!0,["encrypt","decrypt"]),crypto.getRandomValues(new Uint8Array(16))],genKey:async b=>(async a=>[await crypto.subtle.deriveKey({name:"PBKDF2",salt:(new TextEncoder).encode(a(1).slice(20,36)),iterations:1E5,hash:"SHA-256"},await crypto.subtle.importKey("raw",(new TextEncoder).encode(a(0)+a(1)),{name:"PBKDF2"},!1,["deriveKey"]),{name:"AES-CBC",length:256},!0,["encrypt","decrypt"]),(new TextEncoder).encode(a(1).slice(0,16))])(a=>atob(b).split("").map((c,d)=>d%2==a?c:"").join("")),genSeed:()=>(b=>Array(73).fill().map((a,c)=>[33,35,37,39].includes(c)?33==c?b(2):b(10):"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUV1234567890!@#$%^\x26*()\\|]}[{;:/?.\x3e,\x3c`~'\""[b(86)]).join(""))(b=>Math.floor(Math.random()*b))}
